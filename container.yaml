---
- name: Manage containers
  hosts: containerhost
  gather_facts: yes


  pre_tasks:
  - name: Create data directories
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      owner: root
      group: root
    loop:
    - /opt/wakapi/data
    - /opt/ocap/records
    - /opt/ocap/maps
    - /opt/ocap/database
    - /opt/reforger/configs
    - /opt/reforger/profile
    - /opt/reforger/addons
    - /opt/reforger/installation
    - /opt/reforger/installation/Configs
  - name: Create wiki-js directory
    ansible.builtin.file:
      path: /opt/wiki-js
      state: directory
      owner: 1000
      group: 1000
  - name: Create arma-notifier env file
    ansible.builtin.template:
      src: files/containers/arma-notifier-env.j2
      dest: "/etc/arma-notifier-env"
      mode: "0400"
    vars:
      token: "{{ secrets['arma-notifier'] }}"

  - name: Create reforger config file
    ansible.builtin.template:
      src: files/containers/reforger-config.json.j2
      dest: "/opt/reforger/installation/Configs/config.json"
      mode: "0400"

  roles:
  - chasinglogic.podman

  vars:
    ufw_apps:
    - { file: reforger, app: ArmaReforger }
    operationbot_workdir: /srv/operationbot/operationbot
    reforger:
      server_public_address: "{{ ansible_enp41s0.ipv4.address }}"
      game_name: "Zeusops Reforger"
      mods: "606B100247F5C709,5B3ED33ADA805340,5F2944B7474F043F,5965550F24A0C152,595F2BF2F44836FB,5964E0B3BB7410CE,5AB890B71D748750,5AB301290317994A,5ABD0CB57F7E9EB1,612C75A42442AB1F"
      rcon_password: !vault |
        $ANSIBLE_VAULT;1.1;AES256
        31376632353863333039383965623832613363346132633730663337373761376164633436393661
        6538343230316236663930613438626461316265393430300a636266383633323165646164613931
        37643038383334636337663664663332666530353035393861653934373535613232643439356161
        3465386339323738340a616233363335323030366561383336383132386435316437393439343133
        38386539653865333331633633343763343164623838303363333031613963363762
      game_password: zeusops
      port: 2001
      rcon_port: 19999
      a2s_port: 17777
    secrets:
      ocap: !vault |
        $ANSIBLE_VAULT;1.1;AES256
        36313935633535373862303964376531356132613635646332353237636365373631643063393363
        3166313962633130383761353534303664623836333230630a373633396262646333343564363663
        61316336356261356539333635613535363966343836633966363861616466616336653730313237
        3133396663656565310a373831646135393861663962393533643166326435616563383532366264
        6166
      arma-notifier: !vault |
        $ANSIBLE_VAULT;1.1;AES256
        38323232653661663530373530333531333639613261613630356166363134623135323337373561
        3631376239313938623930333234646363653765633766310a376335316364616436663938313631
        35643063316238363863666634303832663464643930356330636163613039623930653532383963
        3663653230643232340a646635663566393436396538666635396331663465363539303237386164
        62343835303531613964363761363733396161376430366335373632383030353437646434326239
        31663065613361323665346139343964393963646265383032333839653535323963663730643465
        38326433656662323265353263633830313435326439623135623839393036353233303862633362
        61376632303765316633
      zeusops-bot: !vault |
        $ANSIBLE_VAULT;1.1;AES256
        62396430643537353833623561376436663261373264653636613530383036643332383833643961
        3634313265323432316162643933353362363964613663640a626130356561343338636438363931
        38306332633539386434343534366130616139623261343064323136303039356233303064313736
        3861316438336336380a333537333863623462336235633239666138363133636331383231323635
        39333732636262396565333934333334613161336438376333376263643461313231376431383133
        37353561306563343561383861353961336535666365376337666231643664616630313236383064
        64386463306639623266313231363034396165656233633536303039393638333831636135323165
        34663837663964633230
    podman_services:
    - image_name: n1try/wakapi
      description: Wakapi server
      publish:
      - 127.0.0.1:3100:3000
      volumes:
      - /opt/wakapi/data:/data
      service_name: wakapi
      install:
        wanted_by:
        - network.target
      timeout_start_sec: 1m

    - image_name: ghcr.io/ocap2/web
      service_name: ocap
      description: OCAP server
      publish:
      - 127.0.0.1:5000:5000
      volumes:
      - /opt/ocap/records:/var/lib/ocap/data
      - /opt/ocap/maps:/var/lib/ocap/maps
      - /opt/ocap/database:/var/lib/ocap/db
      env_vars:
      - "OCAP_SECRET={{ secrets['ocap'] }}"
      install:
        wanted_by:
        - network.target
      timeout_start_sec: 1m

    - image_name: docker.io/gehock/arma-notifier
      image_tag: v0.3.3
      service_name: arma-notifier
      description: Arma notifier
      volumes:
      - /etc/arma-notifier-env:/.env
      install:
        wanted_by:
        - network.target
      timeout_start_sec: 1m
      state: stopped
      enabled: false
      restart: "no"

    - image_name: docker.io/gehock/operationbot
      image_tag: v0.52.0
      service_name: operationbot
      description: Operation Bot
      volumes:
      - "{{ operationbot_workdir }}/database:/app/database"
      - "{{ operationbot_workdir }}/secret.py:/app/secret.py"
      # Using the default config currently, no need to mount
      # - "{{ operationbot_workdir }}/config.py:/app/config.py"
      install:
        wanted_by:
        - network.target
      timeout_start_sec: 1m

    - image_name: ghcr.io/requarks/wiki
      image_tag: 2.5.300
      service_name: wiki-js
      description: Wiki.js
      volumes:
      - "/opt/wiki-js:/data"
      env_vars:
      - DB_TYPE=sqlite
      - DB_FILEPATH=/data/wiki-js.db
      publish:
      - 3101:3000
      install:
        wanted_by:
        - network.target
      timeout_start_sec: 1m

    - image_name: ghcr.io/zeusops/arma-reforger
      image_tag: latest
      service_name: reforger
      description: Arma Reforger
      volumes:
      # TODO: make dynamic based on a dictionary in vars
      #- /opt/reforger/configs:/reforger/Configs
      - /opt/reforger/profile:/home/profile
      - /opt/reforger/installation:/reforger
      env_vars:
      - "SKIP_INSTALL=true"
      - "ARMA_CONFIG=current-config.json"
      #publish:
      #- "{{ reforger.port }}:{{ reforger.port }}/udp"
      #- "{{ reforger.a2s_port }}:{{ reforger.a2s_port }}/udp"
      #- "{{ reforger.rcon_port }}:{{ reforger.rcon_port }}/udp"  # RCON
      network: host

    #- image_name: ghcr.io/zeusops/arma-reforger
    #  image_tag: latest
    #  service_name: reforger-nobackend
    #  description: Arma Reforger (no backend)
    #  volumes:
    #  # TODO: make dynamic based on a dictionary in vars
    #  #- /opt/reforger/configs:/reforger/Configs
    #  - /opt/reforger/profile:/home/profile
    #  - /opt/reforger/installation:/reforger
    #  env_vars:
    #  - "SKIP_INSTALL=true"
    #  - "ARMA_CONFIG=config.json"
    #  - "ARMA_PARAMS=\"-adminPassword salasana -addons 6324F7124A9768FB -server worlds/NoBackendScenarioLoader.ent -scenarioId {ECC61978EDCC2B5A}Missions/23_Campaign.conf -bindIP 0.0.0.0 -bindPort 2001 -maxFPS 60 -logLevel normal -logStats 60000\""
    #  #publish:
    #  #- "{{ reforger.port }}:{{ reforger.port }}/udp"
    #  #- "{{ reforger.a2s_port }}:{{ reforger.a2s_port }}/udp"
    #  #- "{{ reforger.rcon_port }}:{{ reforger.rcon_port }}/udp"  # RCON
    #  network: host
    #  state: stopped
    #  enabled: false
    #  restart: "no"

    - image_name: ghcr.io/zeusops/arma-reforger
      image_tag: latest
      service_name: reforger-update-server
      description: Arma Reforger (download server update)
      volumes:
      # TODO: make dynamic based on a dictionary in vars
      #- /opt/reforger/configs:/reforger/Configs
      - /opt/reforger/profile:/home/profile
      - /opt/reforger/installation:/reforger
      env_vars:
      - "SKIP_INSTALL=false"
      - "ARMA_CONFIG=config.json"
      #publish:
      #- "{{ reforger.port }}:{{ reforger.port }}/udp"
      #- "{{ reforger.a2s_port }}:{{ reforger.a2s_port }}/udp"
      #- "{{ reforger.rcon_port }}:{{ reforger.rcon_port }}/udp"  # RCON
      network: host
      state: stopped
      enabled: false
      restart: "no"

    - image_name: ghcr.io/zeusops/zeusops-bot
      image_tag: dev-pr-28
      service_name: zeusops-bot
      description: Zeusops Bot
      volumes:
      - /opt/reforger/installation/Configs:/data/config
      # - /opt/reforger/reference_config.json:/data/reference_config.json:ro
      env_vars:
      - "BOT_REFORGER_REFERENCE_CONFIG=/data/config/current-config.json"
      - "BOT_REFORGER_CONFIG_FOLDER=/data/config"
      - "BOT_DISCORD_TOKEN={{ secrets['zeusops-bot'] | trim }}"
      install:
        wanted_by:
        - network.target
      timeout_start_sec: 1m

    # Don't run `apt upgrade` every time something changes
    podman_upgrade_system: no

  tasks:
  # TODO: move into a role
  - name: Install UFW apps
    ansible.builtin.copy:
      src: "files/ufw/applications.d/{{ item.file }}"
      dest: "/etc/ufw/applications.d/{{ item.file }}"
    loop: "{{ ufw_apps }}"
  - name: Enable UFW rules
    community.general.ufw:
      rule: allow
      name: "{{ item.app }}"
    loop: "{{ ufw_apps }}"
